{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/admin/create-company/create-company.component.html","src/app/admin/create-coupon/create-coupon.component.html","src/app/admin/create-customer/create-customer.component.html","src/app/admin/get-companies/get-companies.component.html","src/app/admin/get-coupons/get-coupons.component.html","src/app/admin/get-customers/get-customers.component.html","src/app/admin/get-incomes/get-incomes.component.html","src/app/company/create-company-coupon/create-company-coupon.component.html","src/app/company/get-company-coupons/get-company-coupons.component.html","src/app/customer/get-customer-coupons/get-customer-coupons.component.html","src/app/customer/purchase-coupon/purchase-coupon.component.html","src/app/login/login.component.html","src/app/registration/registration.component.html","src/app/shared/layouts/admin/admin.component.html","src/app/shared/layouts/authorisation/authorisation.component.html","src/app/shared/layouts/company/company.component.html","src/app/shared/layouts/customer/customer.component.html","src/app/shared/page404/page404.component.html","node_modules/tslib/tslib.es6.js","src/app/admin/create-company/create-company.component.ts","src/app/admin/create-coupon/create-coupon.component.ts","src/app/admin/create-customer/create-customer.component.ts","src/app/admin/get-companies/get-companies.component.ts","src/app/admin/get-coupons/get-coupons.component.ts","src/app/admin/get-customers/get-customers.component.ts","src/app/admin/get-incomes/get-incomes.component.ts","src/app/app-routing.module.ts","src/app/app.component.ts","src/app/app.module.ts","src/app/company/create-company-coupon/create-company-coupon.component.ts","src/app/company/get-company-coupons/get-company-coupons.component.ts","src/app/customer/get-customer-coupons/get-customer-coupons.component.ts","src/app/customer/purchase-coupon/purchase-coupon.component.ts","src/app/login/login.component.ts","src/app/models/errorStateMatcher.ts","src/app/registration/registration.component.ts","src/app/shared/guards/admin-auth.guard.ts","src/app/shared/guards/company-auth.guard.ts","src/app/shared/guards/customer-auth.guard.ts","src/app/shared/layouts/admin/admin.component.css","src/app/shared/layouts/admin/admin.component.ts","src/app/shared/layouts/authorisation/authorisation.component.css","src/app/shared/layouts/authorisation/authorisation.component.ts","src/app/shared/layouts/company/company.component.css","src/app/shared/layouts/company/company.component.ts","src/app/shared/layouts/customer/customer.component.css","src/app/shared/layouts/customer/customer.component.ts","src/app/shared/page404/page404.component.ts","src/app/shared/services/admin.service.ts","src/app/shared/services/authorisation.service.ts","src/app/shared/services/company.service.ts","src/app/shared/services/customer.service.ts","src/app/shared/services/error.service.ts","src/app/shared/shared.module.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<form class=\\\"example-form div2 animated bounceInRight\\\"\\n      (ngSubmit)=\\\"onSubmit()\\\"\\n>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Company name\\\"\\n           [formControl]=\\\"form.get('name')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('name').hasError('minlength') && !form.get('name').hasError('required')\\\">\\n      Please enter a valid name (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('maxlength') && !form.get('name').hasError('required')\\\">\\n      Please enter a valid name (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n      Name is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Email\\\"\\n           [formControl]=\\\"form.get('email')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('email').hasError('email') && !form.get('email').hasError('required')\\\">\\n      Please enter a valid email address\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('email').hasError('maxlength') && !form.get('email').hasError('required')\\\">\\n      Please enter a valid email (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">\\n      Email is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           [formControl]=\\\"form.get('password')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('password').hasError('minlength') && !form.get('password').hasError('required')\\\">\\n      Please enter a valid password (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('maxlength') && !form.get('password').hasError('required')\\\">\\n      Please enter a valid password (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">\\n      Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Add</button>\\n</form>\\n\"","export default \"<form class=\\\"example-form div2 animated bounceInRight\\\"\\n      (ngSubmit)=\\\"onSubmit()\\\"\\n>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Title\\\"\\n           [formControl]=\\\"form.get('title')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('title').hasError('minlength') && !form.get('title').hasError('required')\\\">\\n      Please enter a valid title (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('title').hasError('maxlength') && !form.get('title').hasError('required')\\\">\\n      Please enter a valid title (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('title').hasError('required')\\\">\\n      Title is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field style=\\\"width: 50%\\\" color=\\\"accent\\\">\\n    <mat-label>Start date</mat-label>\\n    <input matInput\\n           type=\\\"date\\\"\\n           [matDatepicker]=\\\"startDate\\\"\\n           [formControl]=\\\"form.get('startDate')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('startDate').hasError('required')\\\">\\n      Start date is <strong>required</strong>\\n    </mat-error>\\n    <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #startDate></mat-datepicker>\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 50%\\\" color=\\\"accent\\\">\\n    <mat-label>End date</mat-label>\\n    <input matInput\\n           type=\\\"date\\\"\\n           [matDatepicker]=\\\"endDate\\\"\\n           [formControl]=\\\"form.get('endDate')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('endDate').hasError('required')\\\">\\n      End date is <strong>required</strong>\\n    </mat-error>\\n    <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #endDate color=\\\"primary\\\"></mat-datepicker>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"number\\\"\\n           placeholder=\\\"Amount\\\"\\n           [formControl]=\\\"form.get('amount')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('amount').hasError('min') && !form.get('amount').hasError('required')\\\">\\n      Please enter a valid amount (Minimum: 1)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('amount').hasError('required')\\\">\\n      Amount is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field>\\n    <mat-select\\n      placeholder=\\\"Coupon type\\\"\\n      [formControl]=\\\"form.get('couponType')\\\"\\n    >\\n      <mat-option *ngFor=\\\"let coupon of coupons\\\" [value]=\\\"coupon.value\\\">\\n        {{coupon.value}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"form.get('couponType').hasError('required')\\\">\\n      Coupon type is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Message\\\"\\n           [formControl]=\\\"form.get('message')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('message').hasError('minlength') && !form.get('message').hasError('required')\\\">\\n      Please enter a valid message (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('message').hasError('maxlength') && !form.get('message').hasError('required')\\\">\\n      Please enter a valid message (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('message').hasError('required')\\\">\\n      Message is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"number\\\"\\n           placeholder=\\\"Price\\\"\\n           [formControl]=\\\"form.get('price')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('price').hasError('min') && !form.get('price').hasError('required')\\\">\\n      Please enter a valid price (Minimum: 1)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('price').hasError('required')\\\">\\n      Price is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"number\\\"\\n           placeholder=\\\"Company ID\\\"\\n           [formControl]=\\\"form.get('companyId')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('companyId').hasError('required')\\\">\\n      Company ID is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Add</button>\\n</form>\\n\"","export default \"<form class=\\\"example-form div2 animated bounceInRight\\\"\\n      (ngSubmit)=\\\"onSubmit()\\\"\\n>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Customer name\\\"\\n           [formControl]=\\\"form.get('name')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('name').hasError('minlength') && !form.get('name').hasError('required')\\\">\\n      Please enter a valid name (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('maxlength') && !form.get('name').hasError('required')\\\">\\n      Please enter a valid name (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n      Name is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Email\\\"\\n           [formControl]=\\\"form.get('email')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('email').hasError('email') && !form.get('email').hasError('required')\\\">\\n      Please enter a valid email address\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('email').hasError('maxlength') && !form.get('email').hasError('required')\\\">\\n      Please enter a valid email (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">\\n      Email is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           [formControl]=\\\"form.get('password')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('password').hasError('minlength') && !form.get('password').hasError('required')\\\">\\n      Please enter a valid password (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('maxlength') && !form.get('password').hasError('required')\\\">\\n      Please enter a valid password (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">\\n      Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Add</button>\\n</form>\\n\"","export default \"<h3>Company Table</h3>\\n<form class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"companyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <table mat-table [dataSource]=\\\"companySource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef>Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"password\\\">\\n      <th mat-header-cell *matHeaderCellDef>Password</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.password}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef>Email</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n    </ng-container>\\n\\n\\n\\n\\n\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n      <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"companyColumns.length\\\">\\n        <div class=\\\"example-element-detail\\\"\\n             [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n          <div class=\\\"example-element-description\\\">\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onShowUpdate()\\\"\\n            >Update\\n            </button>\\n            <br>\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onDelete(element.id)\\\"\\n            >Remove\\n            </button>\\n            <br>\\n            <form *ngIf=\\\"showUpdate\\\" class=\\\"example-form div2 animated bounceInUp faster\\\"\\n                  (ngSubmit)=\\\"onUpdate(element.id)\\\"\\n            >\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       placeholder=\\\"Name\\\"\\n                       [formControl]=\\\"form.get('name')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('name').hasError('minlength') && !form.get('name').hasError('required')\\\">\\n                  Please enter a valid name (Minimum length: 4)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('name').hasError('maxlength') && !form.get('name').hasError('required')\\\">\\n                  Please enter a valid name (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n                  Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       placeholder=\\\"Email\\\"\\n                       [formControl]=\\\"form.get('email')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('email').hasError('email') && !form.get('email').hasError('required')\\\">\\n                  Please enter a valid email address\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('email').hasError('maxlength') && !form.get('email').hasError('required')\\\">\\n                  Please enter a valid email (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">\\n                  Email is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"password\\\"\\n                       placeholder=\\\"Password\\\"\\n                       [formControl]=\\\"form.get('password')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error\\n                  *ngIf=\\\"form.get('password').hasError('minlength') && !form.get('password').hasError('required')\\\">\\n                  Please enter a valid password (Minimum length: 4)\\n                </mat-error>\\n                <mat-error\\n                  *ngIf=\\\"form.get('password').hasError('maxlength') && !form.get('password').hasError('required')\\\">\\n                  Please enter a valid password (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">\\n                  Password is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Update</button>\\n            </form>\\n          </div>\\n        </div>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"companyColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: companyColumns;\\\"\\n        class=\\\"example-element-row\\\"\\n        [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n        (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n    </tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n  </table>\\n</form>\\n\"","export default \"<h3>Coupon Table</h3>\\n<form class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"couponFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <table mat-table [dataSource]=\\\"couponSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef>Title</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"startDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>Creation Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.startDate}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"endDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>Experation Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endDate}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"couponType\\\">\\n      <th mat-header-cell *matHeaderCellDef>Coupon Type</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.couponType}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"message\\\">\\n      <th mat-header-cell *matHeaderCellDef>Message</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.message}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"price\\\">\\n      <th mat-header-cell *matHeaderCellDef>Price</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"companyId\\\">\\n      <th mat-header-cell *matHeaderCellDef>Company ID</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.companyId}} </td>\\n    </ng-container>\\n\\n\\n<!-- ['title', 'startDate', 'endDate', 'amount', 'couponType', 'message', 'price', 'companyId'] -->\\n\\n\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n      <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"couponColumns.length\\\">\\n        <div class=\\\"example-element-detail\\\"\\n             [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n          <div class=\\\"example-element-description\\\">\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onShowUpdate()\\\"\\n            >Update\\n            </button>\\n            <br>\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onDelete(element.id)\\\"\\n            >Remove\\n            </button>\\n            <br>\\n            <form *ngIf=\\\"showUpdate\\\" class=\\\"example-form div2 animated bounceInUp faster\\\"\\n                  (ngSubmit)=\\\"onUpdate(element.id)\\\"\\n            >\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       placeholder=\\\"Title\\\"\\n                       [formControl]=\\\"form.get('Title')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('Title').hasError('minlength') && !form.get('Title').hasError('required')\\\">\\n                  Please enter a valid title (Minimum length: 4)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('Title').hasError('maxlength') && !form.get('Title').hasError('required')\\\">\\n                  Please enter a valid title (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('Title').hasError('required')\\\">\\n                  Title is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field style=\\\"width: 50%\\\" color=\\\"accent\\\">\\n                <mat-label>Start date</mat-label>\\n                <input matInput\\n                       type=\\\"date\\\"\\n                       [matDatepicker]=\\\"startDate\\\"\\n                       [formControl]=\\\"form.get('startDate')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('startDate').hasError('required')\\\">\\n                  Start date is <strong>required</strong>\\n                </mat-error>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #startDate></mat-datepicker>\\n              </mat-form-field>\\n              <mat-form-field style=\\\"width: 50%\\\" color=\\\"accent\\\">\\n                <mat-label>End date</mat-label>\\n                <input matInput\\n                       type=\\\"date\\\"\\n                       [matDatepicker]=\\\"endDate\\\"\\n                       [formControl]=\\\"form.get('endDate')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('endDate').hasError('required')\\\">\\n                  End date is <strong>required</strong>\\n                </mat-error>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #endDate color=\\\"primary\\\"></mat-datepicker>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"number\\\"\\n                       placeholder=\\\"Amount\\\"\\n                       [formControl]=\\\"form.get('amount')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('amount').hasError('min') && !form.get('amount').hasError('required')\\\">\\n                  Please enter a valid amount (Minimum: 1)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('amount').hasError('required')\\\">\\n                  Amount is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field>\\n                <mat-select\\n                  placeholder=\\\"Coupon type\\\"\\n                  [formControl]=\\\"form.get('couponType')\\\"\\n                >\\n                  <mat-option *ngFor=\\\"let coupon of coupons\\\" [value]=\\\"coupon.value\\\">\\n                    {{coupon.value}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error *ngIf=\\\"form.get('couponType').hasError('required')\\\">\\n                  Coupon type is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       placeholder=\\\"Message\\\"\\n                       [formControl]=\\\"form.get('message')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error\\n                  *ngIf=\\\"form.get('message').hasError('minlength') && !form.get('message').hasError('required')\\\">\\n                  Please enter a valid message (Minimum length: 4)\\n                </mat-error>\\n                <mat-error\\n                  *ngIf=\\\"form.get('message').hasError('maxlength') && !form.get('message').hasError('required')\\\">\\n                  Please enter a valid message (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('message').hasError('required')\\\">\\n                  Message is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"number\\\"\\n                       placeholder=\\\"Price\\\"\\n                       [formControl]=\\\"form.get('price')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('price').hasError('min') && !form.get('price').hasError('required')\\\">\\n                  Please enter a valid price (Minimum: 1)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('price').hasError('required')\\\">\\n                  Price is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"number\\\"\\n                       placeholder=\\\"Company ID\\\"\\n                       [formControl]=\\\"form.get('companyId')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('companyId').hasError('required')\\\">\\n                  Company ID is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Update</button>\\n            </form>\\n          </div>\\n        </div>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"couponColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: couponColumns;\\\"\\n        class=\\\"example-element-row\\\"\\n        [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n        (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n    </tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n  </table>\\n</form>\\n\"","export default \"<h3>Customer Table</h3>\\n<div class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"customerFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n   <table mat-table [dataSource]=\\\"customerSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n\\n     <ng-container matColumnDef=\\\"name\\\">\\n       <th mat-header-cell *matHeaderCellDef>Name</th>\\n       <td mat-cell *matCellDef=\\\"let element\\\">{{element.name}} </td>\\n     </ng-container>\\n\\n     <ng-container matColumnDef=\\\"password\\\">\\n       <th mat-header-cell *matHeaderCellDef>Password</th>\\n       <td mat-cell *matCellDef=\\\"let element\\\">{{element.password}} </td>\\n     </ng-container>\\n\\n     <ng-container matColumnDef=\\\"email\\\">\\n       <th mat-header-cell *matHeaderCellDef>Email</th>\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n     </ng-container>\\n\\n\\n\\n\\n\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n      <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"customerColumns.length\\\">\\n        <div class=\\\"example-element-detail\\\"\\n             [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n          <div class=\\\"example-element-description\\\">\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onShowUpdate()\\\"\\n            >Update\\n            </button>\\n            <br>\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onDelete(element.id)\\\"\\n            >Remove\\n            </button>\\n            <br>\\n            <form *ngIf=\\\"showUpdate\\\" class=\\\"example-form div2 animated bounceInUp faster\\\"\\n                  (ngSubmit)=\\\"onUpdate(element.id)\\\"\\n            >\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       placeholder=\\\"Name\\\"\\n                       [formControl]=\\\"form.get('name')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('name').hasError('minlength') && !form.get('name').hasError('required')\\\">\\n                  Please enter a valid name (Minimum length: 4)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('name').hasError('maxlength') && !form.get('name').hasError('required')\\\">\\n                  Please enter a valid name (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n                  Name is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       placeholder=\\\"Email\\\"\\n                       [formControl]=\\\"form.get('email')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('email').hasError('email') && !form.get('email').hasError('required')\\\">\\n                  Please enter a valid email address\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('email').hasError('maxlength') && !form.get('email').hasError('required')\\\">\\n                  Please enter a valid email (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">\\n                  Email is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"password\\\"\\n                       placeholder=\\\"Password\\\"\\n                       [formControl]=\\\"form.get('password')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error\\n                  *ngIf=\\\"form.get('password').hasError('minlength') && !form.get('password').hasError('required')\\\">\\n                  Please enter a valid password (Minimum length: 4)\\n                </mat-error>\\n                <mat-error\\n                  *ngIf=\\\"form.get('password').hasError('maxlength') && !form.get('password').hasError('required')\\\">\\n                  Please enter a valid password (Maximum length: 20)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">\\n                  Password is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Update</button>\\n            </form>\\n          </div>\\n        </div>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"customerColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: customerColumns;\\\"\\n        class=\\\"example-element-row\\\"\\n        [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n        (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n    </tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n  </table>\\n</div>\\n\"","export default \"<h3>Income Table</h3>\\n<form class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"incomeFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <table mat-table [dataSource]=\\\"incomeSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Company name column -->\\n    <ng-container matColumnDef=\\\"companyName\\\">\\n      <th mat-header-cell *matHeaderCellDef>Company Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.companyName}} </td>\\n    </ng-container>\\n\\n    <!-- Customer name column -->\\n    <ng-container matColumnDef=\\\"customerName\\\">\\n      <th mat-header-cell *matHeaderCellDef>Customer Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.customerName}} </td>\\n    </ng-container>\\n\\n    <!-- Date column -->\\n    <ng-container matColumnDef=\\\"date\\\">\\n      <th mat-header-cell *matHeaderCellDef>@ Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\n    </ng-container>\\n\\n    <!-- ExperationDate column\\n    <ng-container matColumnDef=\\\"expDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>ExperationDate</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.expDate}} </td>\\n    </ng-container> -->\\n\\n    <!-- Description column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef>Description</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n    </ng-container>\\n\\n      <!-- Price column -->\\n      <ng-container matColumnDef=\\\"price\\\">\\n       <th mat-header-cell *matHeaderCellDef>Price</th>\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n      </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"incomeColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: incomeColumns;\\\"></tr>\\n  </table>\\n</form>\\n\"","export default \"<h3>Create Coupon</h3>\\n\\n<form class=\\\"example-form div2 animated bounceInRight\\\"\\n      (ngSubmit)=\\\"onSubmit()\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Title\\\"\\n           [formControl]=\\\"form.get('title')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('title').hasError('minlength') && !form.get('title').hasError('required')\\\">\\n      Please enter a valid title (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('title').hasError('maxlength') && !form.get('title').hasError('required')\\\">\\n      Please enter a valid title (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('title').hasError('required')\\\">\\n      Title is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field style=\\\"width: 50%\\\" color=\\\"accent\\\">\\n    <input matInput\\n           placeholder=\\\"Start date\\\"\\n           [formControl]=\\\"form.get('startDate')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n           [matDatepicker]=\\\"startDate\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('startDate').hasError('required')\\\">\\n      Start date is <strong>required</strong>\\n    </mat-error>\\n    <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #startDate></mat-datepicker>\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 50%\\\" color=\\\"accent\\\">\\n    <input matInput\\n           placeholder=\\\"End date\\\"\\n           [formControl]=\\\"form.get('endDate')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n           [matDatepicker]=\\\"endDate\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('endDate').hasError('required')\\\">\\n      End date is <strong>required</strong>\\n    </mat-error>\\n    <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #endDate color=\\\"primary\\\"></mat-datepicker>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"number\\\"\\n           placeholder=\\\"Amount\\\"\\n           [formControl]=\\\"form.get('amount')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('amount').hasError('min') && !form.get('amount').hasError('required')\\\">\\n      Please enter a valid amount (Minimum: 1)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('amount').hasError('required')\\\">\\n      Amount is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field>\\n    <mat-select\\n      placeholder=\\\"Coupon type\\\"\\n      [formControl]=\\\"form.get('couponType')\\\"\\n    >\\n      <mat-option *ngFor=\\\"let coupon of coupons\\\" [value]=\\\"coupon.value\\\">\\n        {{coupon.value}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"form.get('couponType').hasError('required')\\\">\\n      Coupon type is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Message\\\"\\n           [formControl]=\\\"form.get('message')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('message').hasError('minlength') && !form.get('message').hasError('required')\\\">\\n      Please enter a valid message (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('message').hasError('maxlength') && !form.get('message').hasError('required')\\\">\\n      Please enter a valid message (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('message').hasError('required')\\\">\\n      Message is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"number\\\"\\n           placeholder=\\\"Price\\\"\\n           [formControl]=\\\"form.get('price')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\"\\n    >\\n    <mat-error *ngIf=\\\"form.get('price').hasError('min') && !form.get('price').hasError('required')\\\">\\n      Please enter a valid price (Minimum: 1)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('price').hasError('required')\\\">\\n      Price is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Add</button>\\n</form>\\n\"","export default \"<h3>Company's Coupon Table </h3>\\n\\n<form class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"couponFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"couponSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"title\\\">\\n    <th mat-header-cell *matHeaderCellDef>Title</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"startDate\\\">\\n    <th mat-header-cell *matHeaderCellDef>Creation Date</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">{{element.startDate}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"endDate\\\">\\n    <th mat-header-cell *matHeaderCellDef>Experation Date</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endDate}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"amount\\\">\\n    <th mat-header-cell *matHeaderCellDef>Amount</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"couponType\\\">\\n    <th mat-header-cell *matHeaderCellDef>Coupon Type</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.couponType}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"message\\\">\\n    <th mat-header-cell *matHeaderCellDef>Message</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.message}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"price\\\">\\n    <th mat-header-cell *matHeaderCellDef>Price</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"companyId\\\">\\n    <th mat-header-cell *matHeaderCellDef>Company ID</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.companyId}} </td>\\n  </ng-container>\\n\\n\\n\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n      <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"couponColumns.length\\\">\\n        <div class=\\\"example-element-detail\\\"\\n             [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n          <div class=\\\"example-element-description\\\">\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onShowUpdate()\\\"\\n            >Update\\n            </button>\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onDelete(element.id)\\\"\\n            >Remove\\n            </button>\\n            <br>\\n            <form *ngIf=\\\"showUpdate\\\" class=\\\"example-form div2 animated bounceInUp faster\\\"\\n                  (ngSubmit)=\\\"onUpdate(element.id)\\\"\\n            >\\n              <mat-form-field color=\\\"accent\\\">\\n                <mat-label>End date</mat-label>\\n                <input matInput\\n                       [matDatepicker]=\\\"endDate\\\"\\n                       [formControl]=\\\"form.get('endDate')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('endDate').hasError('required')\\\">\\n                  End date is <strong>required</strong>\\n                </mat-error>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #endDate color=\\\"primary\\\"></mat-datepicker>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"number\\\"\\n                       placeholder=\\\"Price\\\"\\n                       [formControl]=\\\"form.get('price')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('price').hasError('min') && !form.get('price').hasError('required')\\\">\\n                  Please enter a valid price (Minimum: 1)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('price').hasError('required')\\\">\\n                  Price is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <br>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput\\n                       type=\\\"number\\\"\\n                       placeholder=\\\"Amount\\\"\\n                       [formControl]=\\\"form.get('amount')\\\"\\n                       [errorStateMatcher]=\\\"matcher\\\"\\n                >\\n                <mat-error *ngIf=\\\"form.get('amount').hasError('min') && !form.get('amount').hasError('required')\\\">\\n                  Please enter a valid amount (Minimum: 1)\\n                </mat-error>\\n                <mat-error *ngIf=\\\"form.get('amount').hasError('required')\\\">\\n                  Amount is <strong>required</strong>\\n                </mat-error>\\n              </mat-form-field>\\n              <button mat-button class=\\\"button2\\\" [disabled]=\\\"form.invalid\\\">Update</button>\\n            </form>\\n          </div>\\n        </div>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"couponColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: couponColumns;\\\"\\n        class=\\\"example-element-row\\\"\\n        [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n        (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n    </tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n  </table>\\n</form>\\n\"","export default \"<h3>My Coupons</h3>\\n\\n<form class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"couponFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <table mat-table [dataSource]=\\\"couponSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Title column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef>Title</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Start date column -->\\n    <ng-container matColumnDef=\\\"startDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>Creation Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.startDate}} </td>\\n    </ng-container>\\n\\n    <!-- End date column -->\\n    <ng-container matColumnDef=\\\"endDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>Experation Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endDate}} </td>\\n    </ng-container>\\n\\n    <!-- Amount column -->\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\n    </ng-container>\\n\\n    <!-- Type column -->\\n    <ng-container matColumnDef=\\\"couponType\\\">\\n      <th mat-header-cell *matHeaderCellDef>Coupon Type</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.couponType}} </td>\\n    </ng-container>\\n\\n    <!-- Message column -->\\n    <ng-container matColumnDef=\\\"message\\\">\\n      <th mat-header-cell *matHeaderCellDef>Message</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.message}} </td>\\n    </ng-container>\\n\\n    <!-- Price column -->\\n    <ng-container matColumnDef=\\\"price\\\">\\n      <th mat-header-cell *matHeaderCellDef>Price</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n    </ng-container>\\n\\n    <!-- Image column -->\\n    <ng-container matColumnDef=\\\"image\\\">\\n      <th mat-header-cell *matHeaderCellDef>Image</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.image}} </td>\\n    </ng-container>\\n\\n\\n\\n\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"couponColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: couponColumns;\\\"></tr>\\n  </table>\\n</form>\\n\"","export default \"<h3>Available Coupons Table</h3>\\n\\n<form class=\\\"div2 animated bounceInRight\\\">\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"couponFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <table mat-table [dataSource]=\\\"couponSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\">\\n\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef>Title</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"startDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>Creation Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{element.startDate}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"endDate\\\">\\n      <th mat-header-cell *matHeaderCellDef>Experation Date</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.endDate}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.amount}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"couponType\\\">\\n      <th mat-header-cell *matHeaderCellDef>Coupon Type</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.couponType}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"message\\\">\\n      <th mat-header-cell *matHeaderCellDef>Message</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.message}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"price\\\">\\n      <th mat-header-cell *matHeaderCellDef>Price</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"companyId\\\">\\n      <th mat-header-cell *matHeaderCellDef>Company ID</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.companyId}} </td>\\n    </ng-container>\\n\\n\\n\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\n      <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"couponColumns.length\\\">\\n        <div class=\\\"example-element-detail\\\"\\n             [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n          <div class=\\\"example-element-description\\\">\\n            <button mat-stroked-button class=\\\"button3\\\"\\n                    (click)=\\\"onPurchase(element.id)\\\"\\n            >Purchase\\n            </button>\\n          </div>\\n        </div>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"couponColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let element; columns: couponColumns;\\\"\\n        class=\\\"example-element-row\\\"\\n        [class.example-expanded-row]=\\\"expandedElement === element\\\"\\n        (click)=\\\"expandedElement = expandedElement === element ? null : element\\\">\\n    </tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\n  </table>\\n</form>\\n\"","export default \"<form class=\\\"div1 animated fadeIn slow\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input\\n      matInput\\n      placeholder=\\\"Username\\\"\\n      [formControl]=\\\"form.get('name')\\\"\\n      [errorStateMatcher]=\\\"matcher\\\"\\n    />\\n    <mat-error\\n      *ngIf=\\\"\\n        form.get('name').hasError('minlength') &&\\n        !form.get('name').hasError('required')\\n      \\\"\\n    >\\n      Please enter a valid username (Minimum length: 4)\\n    </mat-error>\\n    <mat-error\\n      *ngIf=\\\"\\n        form.get('name').hasError('maxlength') &&\\n        !form.get('name').hasError('required')\\n      \\\"\\n    >\\n      Please enter a valid username (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n      Username is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br />\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input\\n      matInput\\n      type=\\\"password\\\"\\n      placeholder=\\\"Password\\\"\\n      [formControl]=\\\"form.get('password')\\\"\\n      [errorStateMatcher]=\\\"matcher\\\"\\n    />\\n    <mat-error\\n      *ngIf=\\\"\\n        form.get('password').hasError('minlength') &&\\n        !form.get('password').hasError('required')\\n      \\\"\\n    >\\n      Please enter a valid password (Minimum length: 4)\\n    </mat-error>\\n    <mat-error\\n      *ngIf=\\\"\\n        form.get('password').hasError('maxlength') &&\\n        !form.get('password').hasError('required')\\n      \\\"\\n    >\\n      Please enter a valid password (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">\\n      Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br />\\n  <mat-form-field>\\n    <mat-select\\n      placeholder=\\\"Client type\\\"\\n      [formControl]=\\\"form.get('clientType')\\\"\\n    >\\n      <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.value\\\">\\n        {{ client.value }}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"form.get('clientType').hasError('required')\\\">\\n      Client type is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br />\\n  <button mat-button [disabled]=\\\"form.invalid || form.disabled\\\">Sing in</button>\\n  <button mat-button routerLink=\\\"/registration\\\">Sing up</button>\\n</form>\\n\"","export default \"<form class=\\\"div1 animated fadeIn slow\\\"\\n      (ngSubmit)=\\\"onSubmit()\\\"\\n>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Email\\\"\\n           [formControl]=\\\"form.get('email')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error *ngIf=\\\"form.get('email').hasError('email') && !form.get('email').hasError('required')\\\">\\n      Please enter a valid email address\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('email').hasError('maxlength') && !form.get('email').hasError('required')\\\">\\n      Please enter a valid email (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('email').hasError('required')\\\">\\n      Email is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           placeholder=\\\"Username\\\"\\n           [formControl]=\\\"form.get('name')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error *ngIf=\\\"form.get('name').hasError('minlength') && !form.get('name').hasError('required')\\\">\\n      Please enter a valid username (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('maxlength') && !form.get('name').hasError('required')\\\">\\n      Please enter a valid username (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('name').hasError('required')\\\">\\n      Username is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput\\n           type=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           [formControl]=\\\"form.get('password')\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error *ngIf=\\\"form.get('password').hasError('minlength') && !form.get('password').hasError('required')\\\">\\n      Please enter a valid password (Minimum length: 4)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('maxlength') && !form.get('password').hasError('required')\\\">\\n      Please enter a valid password (Maximum length: 20)\\n    </mat-error>\\n    <mat-error *ngIf=\\\"form.get('password').hasError('required')\\\">\\n      Password is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field>\\n    <mat-select\\n      placeholder=\\\"Client type\\\"\\n      [formControl]=\\\"form.get('clientType')\\\"\\n    >\\n      <mat-option *ngFor=\\\"let client of clients\\\" [value]=\\\"client.value\\\">\\n        {{client.value}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"form.get('clientType').hasError('required')\\\">\\n      Client type is <strong>required</strong>\\n    </mat-error>\\n  </mat-form-field>\\n  <br>\\n  <button mat-button routerLink=\\\"/login\\\">Sing in</button>\\n  <button mat-button [disabled]=\\\"form.invalid || form.disabled\\\">Sing up</button>\\n</form>\\n\\n\"","export default \"<mat-sidenav-container class=\\\"container\\\">\\n  <mat-sidenav #sidenav [(mode)]=\\\"over\\\" [(opened)]=\\\"opened\\\" class=\\\"bottom-to-top\\\">\\n    <div class=\\\"my-2\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"></div>\\n    <div class=\\\"mt-2 py-3 text-white\\\" fxLayout=\\\"column\\\"\\n         fxLayoutAlign=\\\"center center\\\"\\n         fxLayoutGap=\\\"7px\\\">\\n      <div>\\n        <a>\\n          <span class=\\\"lead\\\">ADMIN</span>\\n        </a>\\n      </div>\\n    </div>\\n    <hr width=\\\"90%\\\">\\n    <div>\\n      <mat-accordion multi=\\\"true\\\" [displayMode]=\\\"displayMode\\\">\\n        <mat-expansion-panel class=\\\"no-shadow my-0\\\">\\n          <mat-expansion-panel-header fxLayout=\\\"row\\\" [expandedHeight]=\\\"expandHeight\\\" [collapsedHeight]=\\\"collapseHeight\\\">\\n            <mat-panel-title class=\\\"text-white\\\">\\n              Companies\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-nav-list class=\\\"ml-0\\\" dense>\\n            <mat-nav-list class=\\\"ml-0\\\" dense>\\n              <button mat-button class=\\\"button1\\\" routerLink=\\\"/admin/create-company\\\">Add</button>\\n              <button mat-button class=\\\"button1\\\" routerLink=\\\"/admin/get-companies\\\">Show</button>\\n              <hr width=\\\"90%\\\">\\n            </mat-nav-list>\\n          </mat-nav-list>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel class=\\\"no-shadow my-0\\\">\\n          <mat-expansion-panel-header fxLayout=\\\"row\\\" [expandedHeight]=\\\"expandHeight\\\" [collapsedHeight]=\\\"collapseHeight\\\">\\n            <mat-panel-title class=\\\"text-white\\\">\\n              Customers\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-nav-list class=\\\"ml-0\\\" dense>\\n            <button mat-button class=\\\"button1\\\" routerLink=\\\"/admin/create-customer\\\">Add</button>\\n            <button mat-button class=\\\"button1\\\" routerLink=\\\"/admin/get-customers\\\">Show</button>\\n            <hr width=\\\"90%\\\">\\n          </mat-nav-list>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel class=\\\"no-shadow my-0\\\">\\n          <mat-expansion-panel-header fxLayout=\\\"row\\\" [expandedHeight]=\\\"expandHeight\\\" [collapsedHeight]=\\\"collapseHeight\\\">\\n            <mat-panel-title class=\\\"text-white\\\">\\n              Coupons\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n          <mat-nav-list class=\\\"ml-0\\\" dense>\\n            <button mat-button class=\\\"button1\\\" routerLink=\\\"/admin/create-coupon\\\">Add</button>\\n            <button mat-button class=\\\"button1\\\" routerLink=\\\"/admin/get-coupons\\\">Show</button>\\n            <hr width=\\\"90%\\\">\\n          </mat-nav-list>\\n        </mat-expansion-panel>\\n        <button mat-button class=\\\"button4\\\" routerLink=\\\"/admin/get-incomes\\\">Incomes</button>\\n      </mat-accordion>\\n    </div>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"header-box-shadow\\\">\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" fxShow.sm=\\\"true\\\" fxShow.gt-sm=\\\"false\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <mat-icon class=\\\"mr-1\\\">home</mat-icon>\\n      <span>Coupon System</span>\\n      <span class=\\\"spacer\\\"></span>\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\" fxShow.lt-md=\\\"false\\\" fxShow.gt-sm=\\\"true\\\">\\n        <mat-icon>exit_to_app</mat-icon>\\n        <span class=\\\"ml-2\\\">Sign out</span>\\n      </button>\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" fxShow.lt-md=\\\"true\\\" fxShow.gt-sm=\\\"false\\\">\\n        <mat-menu #menu=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n          <span class=\\\"sure\\\">Are you sure?</span>\\n          <button mat-menu-item>\\n            <span>No</span>\\n          </button>\\n          <button mat-menu-item (click)=\\\"auth.logout()\\\">\\n            <span>Yes</span>\\n          </button>\\n        </mat-menu>\\n      </button>\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n    <div class=\\\"animated fadeOut slower\\\">\\n      <h1>Welcome</h1>\\n      <h2>{{date}}</h2>\\n    </div>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","export default \"<mat-sidenav-container class=\\\"container\\\">\\n    <div class=\\\"animated fadeInDown fast\\\">\\n      <h1>Coupon System</h1>\\n    </div>\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\\n\\n\"","export default \"<mat-sidenav-container class=\\\"container\\\">\\n  <mat-sidenav #sidenav [(mode)]=\\\"over\\\" [(opened)]=\\\"opened\\\" class=\\\"bottom-to-top\\\">\\n    <div class=\\\"my-2\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"></div>\\n    <div class=\\\"mt-2 py-3 text-white\\\" fxLayout=\\\"column\\\"\\n         fxLayoutAlign=\\\"center center\\\"\\n         fxLayoutGap=\\\"7px\\\">\\n      <div>\\n        <a>\\n          <span class=\\\"lead\\\">COMPANY</span>\\n        </a>\\n      </div>\\n    </div>\\n    <hr width=\\\"90%\\\">\\n    <div>\\n      <mat-nav-list>\\n        <button mat-button class=\\\"button1\\\" routerLink=\\\"/company/create-coupon\\\">Add Coupon</button>\\n        <button mat-button class=\\\"button1\\\" routerLink=\\\"/company/my-coupons\\\">My Coupons</button>\\n      </mat-nav-list>\\n    </div>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"header-box-shadow\\\">\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" fxShow.sm=\\\"true\\\" fxShow.gt-sm=\\\"false\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <mat-icon class=\\\"mr-1\\\">home</mat-icon>\\n      <span>Coupon System</span>\\n      <span class=\\\"spacer\\\"></span>\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\" fxShow.lt-md=\\\"false\\\" fxShow.gt-sm=\\\"true\\\">\\n        <mat-icon>exit_to_app</mat-icon>\\n        <span class=\\\"ml-2\\\">Sign out</span>\\n      </button>\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" fxShow.lt-md=\\\"true\\\" fxShow.gt-sm=\\\"false\\\">\\n        <mat-menu #menu=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n          <span class=\\\"sure\\\">Are you sure?</span>\\n          <button mat-menu-item>\\n            <span>No</span>\\n          </button>\\n          <button mat-menu-item (click)=\\\"auth.logout()\\\">\\n            <span>Yes</span>\\n          </button>\\n        </mat-menu>\\n      </button>\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n    <div class=\\\"animated fadeOut slower\\\">\\n      <h1>Welcome</h1>\\n      <h2>{{date}}</h2>\\n    </div>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","export default \"<mat-sidenav-container class=\\\"container\\\">\\n  <mat-sidenav #sidenav [(mode)]=\\\"over\\\" [(opened)]=\\\"opened\\\" class=\\\"bottom-to-top\\\">\\n    <div class=\\\"my-2\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\"></div>\\n    <div class=\\\"mt-2 py-3 text-white\\\" fxLayout=\\\"column\\\"\\n         fxLayoutAlign=\\\"center center\\\"\\n         fxLayoutGap=\\\"7px\\\">\\n      <div>\\n        <a>\\n          <span class=\\\"lead\\\">CUSTOMER</span>\\n        </a>\\n      </div>\\n    </div>\\n    <hr width=\\\"90%\\\">\\n    <div>\\n      <mat-nav-list>\\n        <button mat-button class=\\\"button1\\\" routerLink=\\\"/customer/purchase-coupon\\\">Purchase Coupon</button>\\n        <button mat-button class=\\\"button1\\\" routerLink=\\\"/customer/my-coupons\\\">My Coupons</button>\\n      </mat-nav-list>\\n    </div>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"header-box-shadow\\\">\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" fxShow.sm=\\\"true\\\" fxShow.gt-sm=\\\"false\\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <mat-icon class=\\\"mr-1\\\">home</mat-icon>\\n      <span>Coupon System</span>\\n      <span class=\\\"spacer\\\"></span>\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\" fxShow.lt-md=\\\"false\\\" fxShow.gt-sm=\\\"true\\\">\\n        <mat-icon>exit_to_app</mat-icon>\\n        <span class=\\\"ml-2\\\">Sign out</span>\\n      </button>\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" fxShow.lt-md=\\\"true\\\" fxShow.gt-sm=\\\"false\\\">\\n        <mat-menu #menu=\\\"matMenu\\\" overlapTrigger=\\\"false\\\">\\n          <span class=\\\"sure\\\">Are you sure?</span>\\n          <button mat-menu-item>\\n            <span>No</span>\\n          </button>\\n          <button mat-menu-item (click)=\\\"auth.logout()\\\">\\n            <span>Yes</span>\\n          </button>\\n        </mat-menu>\\n      </button>\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n    <div class=\\\"animated fadeOut slower\\\">\\n      <h1>Welcome</h1>\\n      <h2>{{date}}</h2>\\n    </div>\\n\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\"","export default \"<div>\\n  <button mat-fab color=\\\"primary\\\" routerLink=\\\"/login\\\">Home</button>\\n  <img src=\\\"/src/app/shared/page404/404.gif\\\" alt=\\\"page 404\\\" class=\\\"center\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Component, OnInit} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from '@angular/forms'\nimport {AdminService} from \"../../shared/services/admin.service\"\nimport {MatSnackBar} from \"@angular/material\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\n\n@Component({\n  selector: 'app-create-company',\n  templateUrl: './create-company.component.html',\n  styleUrls: ['../../../app/shared/layouts/admin/admin.component.css']\n})\nexport class CreateCompanyComponent implements OnInit {\n\n  form: FormGroup\n\n  matcher = new MyErrorStateMatcher()\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n        Validators.maxLength(20)\n      ]),\n\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ])\n\n    })\n  }\n\n  onSubmit() {\n    this.admin.createCompany(this.form.value).subscribe(\n      () => this.snackBar.open('New company successfully added.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\nimport {Coupon, CouponType} from \"../../models/coupon\"\nimport {MatSnackBar} from \"@angular/material\"\nimport {AdminService} from \"../../shared/services/admin.service\"\nimport {DatePipe} from \"@angular/common\"\n\n@Component({\n  selector: 'app-create-coupon',\n  templateUrl: './create-coupon.component.html',\n  styleUrls: ['../../../app/shared/layouts/company/company.component.css']\n})\nexport class CreateCouponComponent implements OnInit {\n\n  form: FormGroup\n\n  matcher = new MyErrorStateMatcher()\n\n  coupons: CouponType[] = [\n    {value: 'FOOD'},\n    {value: 'SPORTS'},\n    {value: 'HEALTH'},\n    {value: 'CAMPING'},\n    {value: 'TRAVELLING'},\n    {value: 'RESTAURANTS'},\n    {value: 'ELECTRICITY'}\n  ]\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n\n      title: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      startDate: new FormControl(null, [\n        Validators.required\n      ]),\n\n      endDate: new FormControl(null, [\n        Validators.required\n      ]),\n\n      amount: new FormControl(null, [\n        Validators.required,\n        Validators.min(1)\n      ]),\n\n      couponType: new FormControl(null, [\n        Validators.required\n      ]),\n\n      message: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      price: new FormControl(null, [\n        Validators.required,\n        Validators.min(1)\n      ]),\n\n      companyId: new FormControl(null, [\n        Validators.required\n      ])\n\n    })\n  }\n\n  onSubmit() {\n    let coupon: Coupon = {\n      title: this.form.value.title,\n      startDate: new DatePipe('en-US').transform(this.form.value.startDate, 'yyyy-MM-dd'),\n      endDate: new DatePipe('en-US').transform(this.form.value.endDate, 'yyyy-MM-dd'),\n      amount: this.form.value.amount,\n      couponType: this.form.value.couponType,\n      message: this.form.value.message,\n      price: this.form.value.price,\n      companyId: this.form.value.companyId\n    }\n\n    this.admin.createCoupon(coupon).subscribe(\n      () => this.snackBar.open('New coupon successfully added.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from '@angular/forms'\nimport {AdminService} from \"../../shared/services/admin.service\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\nimport {MatSnackBar} from \"@angular/material\"\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['../../../app/shared/layouts/admin/admin.component.css']\n})\nexport class CreateCustomerComponent implements OnInit{\n\n  form: FormGroup\n\n  matcher = new MyErrorStateMatcher()\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n        Validators.maxLength(20)\n      ]),\n\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ])\n\n    })\n  }\n\n  onSubmit() {\n    this.admin.createCustomer(this.form.value).subscribe(\n      () => this.snackBar.open('New customer successfully added.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from '@angular/material'\nimport {Company} from \"../../models/company\"\nimport {AdminService} from \"../../shared/services/admin.service\"\nimport {animate, state, style, transition, trigger} from '@angular/animations'\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\n\n@Component({\n  selector: 'app-get-companies',\n  templateUrl: './get-companies.component.html',\n  styleUrls: ['../../../app/shared/layouts/admin/admin.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class GetCompaniesComponent implements OnInit {\n\n  companyColumns: string[] = ['name', 'password', 'email']\n  companySource: MatTableDataSource<Company>\n  expandedElement: Company | null\n\n  form: FormGroup\n  matcher = new MyErrorStateMatcher()\n  showUpdate = false\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.admin.getAllCompanies().subscribe(comps => this.companySource = new MatTableDataSource(comps),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n\n    this.form = new FormGroup({\n\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n        Validators.maxLength(20)\n      ]),\n\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ])\n\n    })\n  }\n\n  companyFilter(filterValue: string) {\n    this.companySource.filter = filterValue.trim().toLowerCase()\n  }\n\n  onDelete(id: number) {\n    this.admin.deleteCompany(id).subscribe(\n      () => this.snackBar.open('Company successfully removed.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onUpdate(id: number) {\n    let company: Company = {\n      id: id,\n      name: this.form.value.name,\n      password: this.form.value.password,\n      email: this.form.value.email\n    }\n    this.admin.updateCompany(company).subscribe(\n      () => this.snackBar.open('Company successfully updated.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onShowUpdate() {\n    this.showUpdate === false ? this.showUpdate = true : this.showUpdate = false\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from \"@angular/material\"\nimport {Coupon, CouponType} from \"../../models/coupon\"\nimport {AdminService} from \"../../shared/services/admin.service\"\nimport {animate, state, style, transition, trigger} from '@angular/animations'\nimport {Company} from \"../../models/company\"\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\nimport {DatePipe} from \"@angular/common\"\n\n@Component({\n  selector: 'app-get-coupons',\n  templateUrl: './get-coupons.component.html',\n  styleUrls: ['../../../app/shared/layouts/admin/admin.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class GetCouponsComponent implements OnInit {\n\n  couponColumns: string[] = ['title', 'startDate', 'endDate', 'amount', 'couponType', 'message', 'price', 'companyId']\n  couponSource: MatTableDataSource<Coupon>\n  expandedElement: Company | null\n\n  form: FormGroup\n  matcher = new MyErrorStateMatcher()\n  showUpdate = false\n\n  coupons: CouponType[] = [\n    {value: 'FOOD'},\n    {value: 'SPORTS'},\n    {value: 'HEALTH'},\n    {value: 'CAMPING'},\n    {value: 'TRAVELLING'},\n    {value: 'RESTAURANTS'},\n    {value: 'ELECTRICITY'}\n  ]\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.admin.getAllCoupons().subscribe(coupons => this.couponSource = new MatTableDataSource(coupons),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n\n    this.form = new FormGroup({\n\n      title: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      startDate: new FormControl(null, [\n        Validators.required\n      ]),\n\n      endDate: new FormControl(null, [\n        Validators.required\n      ]),\n\n      amount: new FormControl(null, [\n        Validators.required,\n        Validators.min(1)\n      ]),\n\n      couponType: new FormControl(null, [\n        Validators.required\n      ]),\n\n      message: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      price: new FormControl(null, [\n        Validators.required,\n        Validators.min(1)\n      ]),\n\n      companyId: new FormControl(null, [\n        Validators.required\n      ])\n\n    })\n  }\n\n  couponFilter(filterValue: string) {\n    this.couponSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  onDelete(id: number) {\n    this.admin.deleteCoupon(id).subscribe(\n      () => this.snackBar.open('Coupon successfully removed.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onUpdate(id: number) {\n    let coupon: Coupon = {\n      id: id,\n      title: this.form.value.title,\n      startDate: new DatePipe('en-US').transform(this.form.value.startDate, 'yyyy-MM-dd'),\n      endDate: new DatePipe('en-US').transform(this.form.value.endDate, 'yyyy-MM-dd'),\n      amount: this.form.value.amount,\n      couponType: this.form.value.couponType,\n      message: this.form.value.message,\n      price: this.form.value.price,\n      companyId: this.form.value.companyId\n    }\n\n    this.admin.updateCoupon(coupon).subscribe(\n      () => this.snackBar.open('Coupon successfully updated.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onShowUpdate() {\n    this.showUpdate === false ? this.showUpdate = true : this.showUpdate = false\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from '@angular/material'\nimport {AdminService} from \"../../shared/services/admin.service\"\nimport {Customer} from \"../../models/customer\"\nimport {animate, state, style, transition, trigger} from '@angular/animations'\nimport {Company} from \"../../models/company\"\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\n\n@Component({\n  selector: 'app-get-customers',\n  templateUrl: './get-customers.component.html',\n  styleUrls: ['../../../app/shared/layouts/admin/admin.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class GetCustomersComponent implements OnInit {\n\n  customerColumns: string[] = ['name', 'password', 'email']\n  customerSource: MatTableDataSource<Customer>\n  expandedElement: Company | null\n\n  form: FormGroup\n  matcher = new MyErrorStateMatcher()\n  showUpdate = false\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.admin.getAllCustomers().subscribe(customers => this.customerSource = new MatTableDataSource(customers),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n\n    this.form = new FormGroup({\n\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n        Validators.maxLength(20)\n      ]),\n\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ])\n\n    })\n  }\n\n  customerFilter(filterValue: string) {\n    this.customerSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  onDelete(id: number) {\n    this.admin.deleteCustomer(id).subscribe(\n      () => this.snackBar.open('Customer successfully removed.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onUpdate(id: number) {\n    let customer: Customer = {\n      id: id,\n      name: this.form.value.name,\n      password: this.form.value.password,\n      email: this.form.value.email\n    }\n    this.admin.updateCustomer(customer).subscribe(\n      () => this.snackBar.open('Customer successfully updated.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onShowUpdate() {\n    this.showUpdate === false ? this.showUpdate = true : this.showUpdate = false\n  }\n\n}\n\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from \"@angular/material\"\nimport {Income} from \"../../models/income\"\nimport {AdminService} from \"../../shared/services/admin.service\"\n\n@Component({\n  selector: 'app-get-all-incomes',\n  templateUrl: './get-incomes.component.html',\n  styleUrls: ['../../../app/shared/layouts/admin/admin.component.css']\n})\nexport class GetIncomesComponent implements OnInit {\n\n  incomeColumns: string[] = ['companyName', 'customerName', 'description' , 'date', 'price']\n  incomeSource: MatTableDataSource<Income>\n\n  constructor(private admin: AdminService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.admin.getIncomes().subscribe(incomes => this.incomeSource = new MatTableDataSource(incomes),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  incomeFilter(filterValue: string) {\n    this.incomeSource.filter = filterValue.trim().toLowerCase()\n  }\n\n}\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AdminComponent } from './shared/layouts/admin/admin.component'\nimport { LoginComponent } from './login/login.component'\nimport { CompanyComponent } from './shared/layouts/company/company.component'\nimport { CustomerComponent } from './shared/layouts/customer/customer.component'\nimport { AuthorisationComponent } from './shared/layouts/authorisation/authorisation.component'\nimport { RegistrationComponent } from './registration/registration.component'\nimport { CreateCompanyComponent } from './admin/create-company/create-company.component'\nimport { GetCompaniesComponent } from './admin/get-companies/get-companies.component'\nimport { CreateCustomerComponent } from './admin/create-customer/create-customer.component'\nimport { GetCustomersComponent } from './admin/get-customers/get-customers.component'\nimport { CreateCompanyCouponComponent } from './company/create-company-coupon/create-company-coupon.component'\nimport { GetCompanyCouponsComponent } from './company/get-company-coupons/get-company-coupons.component'\nimport { PurchaseCouponComponent } from './customer/purchase-coupon/purchase-coupon.component'\nimport { GetCustomerCouponsComponent } from './customer/get-customer-coupons/get-customer-coupons.component'\nimport { CreateCouponComponent } from \"./admin/create-coupon/create-coupon.component\"\nimport { GetCouponsComponent } from \"./admin/get-coupons/get-coupons.component\"\nimport { AdminAuthGuard } from \"./shared/guards/admin-auth.guard\"\nimport { Page404Component } from \"./shared/page404/page404.component\"\nimport { CompanyAuthGuard } from \"./shared/guards/company-auth.guard\"\nimport { CustomerAuthGuard } from \"./shared/guards/customer-auth.guard\"\nimport { GetIncomesComponent } from \"./admin/get-incomes/get-incomes.component\"\n\nconst routes: Routes = [\n  {\n    path: '', component: AuthorisationComponent, children: [\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  {\n\n    path: 'admin', component: AdminComponent, canActivate: [AdminAuthGuard], children: [\n      { path: 'create-company', component: CreateCompanyComponent },\n      { path: 'get-companies', component: GetCompaniesComponent },\n      { path: 'create-coupon', component: CreateCouponComponent },\n      { path: 'get-coupons', component: GetCouponsComponent },\n      { path: 'create-customer', component: CreateCustomerComponent },\n      { path: 'get-customers', component: GetCustomersComponent },\n      { path: 'get-incomes', component: GetIncomesComponent }\n    ]\n  },\n  {\n    path: 'company', component: CompanyComponent, canActivate: [CompanyAuthGuard], children: [\n      { path: 'create-coupon', component: CreateCompanyCouponComponent },\n      { path: 'my-coupons', component: GetCompanyCouponsComponent }\n    ]\n  },\n  {\n    path: 'customer', component: CustomerComponent, canActivate: [CustomerAuthGuard], children: [\n      { path: 'purchase-coupon', component: PurchaseCouponComponent },\n      { path: 'my-coupons', component: GetCustomerCouponsComponent }\n    ]\n  },\n  { path: '**', component: Page404Component }\n\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { AuthorisationComponent } from \"./shared/layouts/authorisation/authorisation.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { RegistrationComponent } from \"./registration/registration.component\";\nimport { AdminComponent } from \"./shared/layouts/admin/admin.component\";\nimport { CompanyComponent } from \"./shared/layouts/company/company.component\";\nimport { CustomerComponent } from \"./shared/layouts/customer/customer.component\";\nimport { CreateCompanyComponent } from \"./admin/create-company/create-company.component\";\nimport { GetCompaniesComponent } from \"./admin/get-companies/get-companies.component\";\nimport { CreateCustomerComponent } from \"./admin/create-customer/create-customer.component\";\nimport { GetCustomersComponent } from \"./admin/get-customers/get-customers.component\";\nimport { CreateCompanyCouponComponent } from \"./company/create-company-coupon/create-company-coupon.component\";\nimport { GetCompanyCouponsComponent } from \"./company/get-company-coupons/get-company-coupons.component\";\nimport { PurchaseCouponComponent } from \"./customer/purchase-coupon/purchase-coupon.component\";\nimport { GetCustomerCouponsComponent } from \"./customer/get-customer-coupons/get-customer-coupons.component\";\nimport { GetCouponsComponent } from \"./admin/get-coupons/get-coupons.component\";\nimport { CreateCouponComponent } from \"./admin/create-coupon/create-coupon.component\";\nimport { Page404Component } from \"./shared/page404/page404.component\";\nimport { GetIncomesComponent } from \"./admin/get-incomes/get-incomes.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Page404Component,\n    AuthorisationComponent,\n    LoginComponent,\n    RegistrationComponent,\n    AdminComponent,\n    CreateCompanyComponent,\n    GetCompaniesComponent,\n    CreateCouponComponent,\n    GetCouponsComponent,\n    CreateCustomerComponent,\n    GetCustomersComponent,\n    CompanyComponent,\n    CreateCompanyCouponComponent,\n    GetCompanyCouponsComponent,\n    CustomerComponent,\n    PurchaseCouponComponent,\n    GetCustomerCouponsComponent,\n    GetIncomesComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {Component} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from '@angular/forms'\nimport {Coupon, CouponType} from \"../../models/coupon\"\nimport {CompanyService} from \"../../shared/services/company.service\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\nimport {MatSnackBar} from \"@angular/material\"\nimport {DatePipe} from \"@angular/common\"\n\n@Component({\n  selector: 'app-create-coupon',\n  templateUrl: './create-company-coupon.component.html',\n  styleUrls: ['../../../app/shared/layouts/company/company.component.css']\n})\nexport class CreateCompanyCouponComponent {\n\n  form = new FormGroup({\n\n    title: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20)\n    ]),\n\n    startDate: new FormControl(null, [\n      Validators.required\n    ]),\n\n    endDate: new FormControl(null, [\n      Validators.required\n    ]),\n\n    amount: new FormControl(null, [\n      Validators.required,\n      Validators.min(1)\n    ]),\n\n    couponType: new FormControl(null, [\n      Validators.required\n    ]),\n\n    message: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(4),\n      Validators.maxLength(20)\n    ]),\n\n    price: new FormControl(null, [\n      Validators.required,\n      Validators.min(1)\n    ]),\n\n  })\n\n  matcher = new MyErrorStateMatcher()\n\n  coupons: CouponType[] = [\n    {value: 'FOOD'},\n    {value: 'SPORTS'},\n    {value: 'HEALTH'},\n    {value: 'CAMPING'},\n    {value: 'TRAVELLING'},\n    {value: 'RESTAURANTS'},\n    {value: 'ELECTRICITY'}\n  ]\n\n  constructor(private company: CompanyService,\n              private snackBar: MatSnackBar) {\n  }\n\n  onSubmit() {\n    let coupon: Coupon = {\n      title: this.form.value.title,\n      startDate: new DatePipe('en-US').transform(this.form.value.startDate, 'yyyy-MM-dd'),\n      endDate: new DatePipe('en-US').transform(this.form.value.endDate, 'yyyy-MM-dd'),\n      amount: this.form.value.amount,\n      couponType: this.form.value.couponType,\n      message: this.form.value.message,\n      price: this.form.value.price,\n    }\n\n    this.company.createCoupon(coupon).subscribe(\n      () => this.snackBar.open('New coupon successfully added.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from '@angular/material'\nimport {Coupon, CouponType} from \"../../models/coupon\"\nimport {CompanyService} from \"../../shared/services/company.service\"\nimport {animate, state, style, transition, trigger} from \"@angular/animations\"\nimport {Company} from \"../../models/company\"\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\nimport {DatePipe} from \"@angular/common\"\n\n@Component({\n  selector: 'app-get-coupons',\n  templateUrl: './get-company-coupons.component.html',\n  styleUrls: ['../../shared/layouts/company/company.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class GetCompanyCouponsComponent implements OnInit {\n\n  couponColumns: string[] = ['title', 'startDate', 'endDate', 'amount', 'couponType', 'message', 'price']\n  couponSource: MatTableDataSource<Coupon>\n  expandedElement: Company | null\n\n  form: FormGroup\n  matcher = new MyErrorStateMatcher()\n  showUpdate = false\n\n  coupons: CouponType[] = [\n    {value: 'FOOD'},\n    {value: 'SPORTS'},\n    {value: 'HEALTH'},\n    {value: 'CAMPING'},\n    {value: 'TRAVELLING'},\n    {value: 'RESTAURANTS'},\n    {value: 'ELECTRICITY'}\n  ]\n\n  constructor(private company: CompanyService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.company.getAllCoupons().subscribe(coupons => this.couponSource = new MatTableDataSource(coupons),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n\n    this.form = new FormGroup({\n\n      endDate: new FormControl(null, [\n        Validators.required\n      ]),\n\n      price: new FormControl(null, [\n        Validators.min(1),\n        Validators.required\n      ]),\n\n      amount: new FormControl(null, [\n        Validators.min(1),\n        Validators.required\n      ])\n\n    })\n  }\n\n  couponFilter(filterValue: string) {\n    this.couponSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  onDelete(id: number) {\n    this.company.deleteCoupon(id).subscribe(\n      () => this.snackBar.open('Coupon successfully removed.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onUpdate(id: number) {\n    let coupon: Coupon = {\n      id: id,\n      endDate: new DatePipe('en-US').transform(this.form.value.endDate, 'yyyy-MM-dd'),\n      amount: this.form.value.amount,\n      price: this.form.value.price\n    }\n    this.company.updateCoupon(coupon).subscribe(\n      () => this.snackBar.open('Coupon successfully updated.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  onShowUpdate() {\n    this.showUpdate === false ? this.showUpdate = true : this.showUpdate = false\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from '@angular/material'\nimport {Coupon} from \"../../models/coupon\"\nimport {CustomerService} from \"../../shared/services/customer.service\"\n\n@Component({\n  selector: 'app-get-coupons',\n  templateUrl: './get-customer-coupons.component.html',\n  styleUrls: ['../../shared/layouts/customer/customer.component.css']\n})\nexport class GetCustomerCouponsComponent implements OnInit {\n\n  couponColumns: string[] = ['title', 'startDate', 'endDate', 'amount', 'couponType', 'message', 'price', 'image']\n  couponSource: MatTableDataSource<Coupon>\n\n  constructor(private customer: CustomerService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.customer.getPurchasedCoupons().subscribe(coupons => this.couponSource = new MatTableDataSource(coupons),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  couponFilter(filterValue: string) {\n    this.couponSource.filter = filterValue.trim().toLowerCase()\n  }\n\n}\n","import {Component, OnInit} from '@angular/core'\nimport {MatSnackBar, MatTableDataSource} from '@angular/material'\nimport {Coupon} from \"../../models/coupon\"\nimport {CustomerService} from \"../../shared/services/customer.service\"\nimport {MyErrorStateMatcher} from \"../../models/errorStateMatcher\"\nimport {animate, state, style, transition, trigger} from \"@angular/animations\"\nimport {Company} from \"../../models/company\"\n\n@Component({\n  selector: 'app-purchase-coupon',\n  templateUrl: './purchase-coupon.component.html',\n  styleUrls: ['../../../app/shared/layouts/customer/customer.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n  ]\n})\nexport class PurchaseCouponComponent implements OnInit {\n\n  couponColumns: string[] = ['title', 'startDate', 'endDate', 'amount', 'couponType', 'message', 'price']\n  couponSource: MatTableDataSource<Coupon>\n  expandedElement: Company | null\n\n  matcher = new MyErrorStateMatcher()\n\n  constructor(private customer: CustomerService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.customer.getAvailableCoupons().subscribe(coupons => this.couponSource = new MatTableDataSource(coupons),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n  couponFilter(filterValue: string) {\n    this.couponSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  onPurchase(id: number) {\n    this.customer.purchaseCoupon(id).subscribe(\n      () => this.snackBar.open('Coupon successfully purchased.', '', {duration: 3000}),\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n      })\n  }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from '@angular/forms'\nimport {AuthorisationService} from \"../shared/services/authorisation.service\"\nimport {ClientType} from \"../models/user\"\nimport {Subscription} from \"rxjs\"\nimport {Router} from \"@angular/router\"\nimport {MyErrorStateMatcher} from \"../models/errorStateMatcher\"\nimport {MatSnackBar} from \"@angular/material\"\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../shared/layouts/authorisation/authorisation.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription\n\n  form: FormGroup\n\n  matcher = new MyErrorStateMatcher()\n\n  clients: ClientType[] = [\n    {value: 'ADMIN'},\n    {value: 'COMPANY'},\n    {value: 'CUSTOMER'}\n  ]\n\n  constructor(private auth: AuthorisationService,\n              private router: Router,\n              private snackBar: MatSnackBar\n  ) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      clientType: new FormControl(null, [\n        Validators.required\n      ])\n\n    })\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe()\n    }\n  }\n\n  onSubmit() {\n    this.form.disable()\n    this.sub = this.auth.login(this.form.value).subscribe(\n      () => {\n        if (this.form.value.clientType === 'ADMIN') {\n          this.router.navigate(['/admin'])\n        } else if (this.form.value.clientType === 'COMPANY') {\n          this.router.navigate(['/company'])\n        } else if (this.form.value.clientType === 'CUSTOMER') {\n          this.router.navigate(['/customer'])\n        }\n      },\n      error => {\n        this.snackBar.open(error, '', {duration: 3000})\n        this.form.enable()\n      }\n    )\n  }\n}\n","import {FormControl, FormGroupDirective, NgForm} from '@angular/forms'\nimport {ErrorStateMatcher} from '@angular/material/core'\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted))\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core'\nimport {FormControl, FormGroup, Validators} from '@angular/forms'\nimport {ClientType, User} from \"../models/user\"\nimport {Subscription} from \"rxjs\"\nimport {AuthorisationService} from \"../shared/services/authorisation.service\"\nimport {MyErrorStateMatcher} from \"../models/errorStateMatcher\"\nimport {MatSnackBar} from \"@angular/material\"\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['../shared/layouts/authorisation/authorisation.component.css']\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription\n\n  form: FormGroup\n\n  matcher = new MyErrorStateMatcher()\n\n  clients: ClientType[] = [\n    {value: 'COMPANY'},\n    {value: 'CUSTOMER'}\n  ]\n\n  constructor(private auth: AuthorisationService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.email,\n        Validators.maxLength(20)\n      ]),\n\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      password: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n\n      clientType: new FormControl(null, [\n        Validators.required\n      ])\n\n    })\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe()\n    }\n  }\n\n  onSubmit() {\n    this.form.disable()\n\n    let regUser: User = {\n      name: this.form.value.name,\n      password: this.form.value.password,\n      email: this.form.value.email\n    }\n\n    if (this.form.value.clientType === 'COMPANY') {\n      this.sub = this.auth.regCompany(regUser).subscribe(\n        () => this.snackBar.open('Successful registration.', '', {duration: 3000}),\n        error => {\n          this.snackBar.open(error, '', {duration: 3000})\n          this.form.enable()\n        }\n      )\n    } else if (this.form.value.clientType === 'CUSTOMER') {\n      this.sub = this.auth.regCustomer(regUser).subscribe(\n        () => this.snackBar.open('Successful registration.', '', {duration: 3000}),\n        error => {\n          this.snackBar.open(error, '', {duration: 3000})\n          this.form.enable()\n        }\n      )\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core'\nimport {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router'\nimport {Observable, of} from 'rxjs'\nimport {AuthorisationService} from \"../services/authorisation.service\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private auth: AuthorisationService,\n              private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    if (this.auth.isAdminLoggedIn()) {\n      return of(true)\n    } else {\n      this.router.navigate(['/login'])\n      return of(false)\n    }\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.canActivate(childRoute, state)\n  }\n\n}\n","import {Injectable} from '@angular/core'\nimport {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router'\nimport {Observable, of} from 'rxjs'\nimport {AuthorisationService} from \"../services/authorisation.service\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyAuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private auth: AuthorisationService,\n              private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    if (this.auth.isCompanyLoggedIn()) {\n      return of(true)\n    } else {\n      this.router.navigate(['/login'])\n      return of(false)\n    }\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.canActivate(childRoute, state)\n  }\n\n}\n","import {Injectable} from '@angular/core'\nimport {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router'\nimport {Observable, of} from 'rxjs'\nimport {AuthorisationService} from \"../services/authorisation.service\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerAuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private auth: AuthorisationService,\n              private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    if (this.auth.isCustomerLoggedIn()) {\n      return of(true)\n    } else {\n      this.router.navigate(['/login'])\n      return of(false)\n    }\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.canActivate(childRoute, state)\n  }\n\n}\n","export default \".spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\\n\\n.mat-menu-item {\\n  color: #3e50b5;\\n  text-align: center;\\n}\\n\\n.sure {\\n  font-family: Arial;\\n  font-size: small;\\n  text-align: center;\\n  color: #3e50b5;\\n  margin-top: 5px;\\n  margin-bottom: 15px;\\n  margin-left: 15px;\\n}\\n\\n.container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\nmat-sidenav {\\n  width: 250px;;\\n}\\n\\n.no-shadow {\\n  box-shadow: none !important;\\n}\\n\\n::ng-deep .mat-expansion-panel-body {\\n  padding: 0 !important;\\n  padding-left: 10px !important;\\n}\\n\\n.header-box-shadow {\\n  box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\n}\\n\\n.bottom-to-top {\\n  border: 0 solid;\\n  border-right-width: 1px;\\n  -webkit-border-image:\\n  -webkit-gradient(linear, left bottom, left top, from(#c1c1c1), to(rgba(0, 0, 0, 0))) 1 100%;\\n  -webkit-border-image:\\n  linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%;\\n       -o-border-image:\\n  linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%;\\n          border-image:\\n  -webkit-gradient(linear, left bottom, left top, from(#c1c1c1), to(rgba(0, 0, 0, 0))) 1 100%;\\n          border-image:\\n  linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\n.button1 {\\n  color: #3e50b5;\\n  text-align: left;\\n  font-weight: normal;\\n  font-size: 14px;\\n  width: 230px;\\n}\\n\\n.button2 {\\n  color: #3e50b5;\\n  width: 100%;\\n}\\n\\n.button3 {\\n  color: #3e50b5;\\n  width: 1000px;\\n}\\n\\n.button4 {\\n  color: #3e50b5;\\n  text-align: left;\\n  font-weight: normal;\\n  font-size: 14px;\\n  width: 230px;\\n  margin-left: 9px;\\n}\\n\\nh1 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 130px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\nh2 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 65px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\nh3 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 40px;\\n  color: #3e50b5;\\n  text-shadow: 1px 5px 3px #969696, 3px 9px 7px #aba8a8;\\n}\\n\\nth {\\n  font-size: 15px;\\n  font-weight: bold;\\n    color: #6f737a;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row {\\n  height: 0;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: #f5f5f5;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n\\n.example-element-row td {\\n  border-bottom-width: 0;\\n}\\n\\n.example-element-detail {\\n  overflow: hidden;\\n  display: -webkit-box;\\n  display: flex;\\n}\\n\\n.example-element-diagram {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution {\\n  opacity: 0.5;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2xheW91dHMvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFjO1VBQWQsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFNBQVM7RUFDVCxPQUFPO0VBQ1AsUUFBUTtBQUNWOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLHFHQUFxRztBQUN2Rzs7QUFFQTtFQUNFLGVBQWU7RUFDZix1QkFBdUI7RUFDdkI7NkZBQ3dEO0VBRHhEOzJEQUN3RDtPQUR4RDsyREFDd0Q7VUFEeEQ7NkZBQ3dEO1VBRHhEOztBQUVGOztBQUdBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztFQUNkLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLG9EQUFvRDtBQUN0RDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGNBQWM7RUFDZCxvREFBb0Q7QUFDdEQ7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixjQUFjO0VBQ2QscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtJQUNmLGNBQWM7QUFDbEI7O0FBR0E7RUFDRSxXQUFXO0FBQ2I7O0FBR0E7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2xheW91dHMvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuLm1hdC1tZW51LWl0ZW0ge1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc3VyZSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiBzbWFsbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzNlNTBiNTtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBtYXJnaW4tbGVmdDogMTVweDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG5tYXQtc2lkZW5hdiB7XG4gIHdpZHRoOiAyNTBweDs7XG59XG5cbi5uby1zaGFkb3cge1xuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0LWV4cGFuc2lvbi1wYW5lbC1ib2R5IHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLmhlYWRlci1ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAzcHggNXB4IC0xcHggcmdiYSgwLDAsMCwuMiksIDAgNnB4IDEwcHggMCByZ2JhKDAsMCwwLC4xNCksIDAgMXB4IDE4cHggMCByZ2JhKDAsMCwwLC4xMik7XG59XG5cbi5ib3R0b20tdG8tdG9wIHtcbiAgYm9yZGVyOiAwIHNvbGlkO1xuICBib3JkZXItcmlnaHQtd2lkdGg6IDFweDtcbiAgYm9yZGVyLWltYWdlOlxuICBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAjYzFjMWMxLCByZ2JhKDAsIDAsIDAsIDApKSAxIDEwMCVcbn1cblxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYnV0dG9uMSB7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdpZHRoOiAyMzBweDtcbn1cblxuLmJ1dHRvbjIge1xuICBjb2xvcjogIzNlNTBiNTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5idXR0b24zIHtcbiAgY29sb3I6ICMzZTUwYjU7XG4gIHdpZHRoOiAxMDAwcHg7XG59XG5cbi5idXR0b240IHtcbiAgY29sb3I6ICMzZTUwYjU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2lkdGg6IDIzMHB4O1xuICBtYXJnaW4tbGVmdDogOXB4O1xufVxuXG5oMSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXNpemU6IDEzMHB4O1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1zaGFkb3c6IDFweCAzcHggMCAjOTY5Njk2LCAxcHggMTNweCA1cHggI2FiYThhODtcbn1cblxuaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiA2NXB4O1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1zaGFkb3c6IDFweCAzcHggMCAjOTY5Njk2LCAxcHggMTNweCA1cHggI2FiYThhODtcbn1cblxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1zaGFkb3c6IDFweCA1cHggM3B4ICM5Njk2OTYsIDNweCA5cHggN3B4ICNhYmE4YTg7XG59XG5cbnRoIHtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzZmNzM3YTtcbn1cblxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5cbnRyLmV4YW1wbGUtZGV0YWlsLXJvdyB7XG4gIGhlaWdodDogMDtcbn1cblxudHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XG59XG5cbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogI2VmZWZlZjtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1yb3cgdGQge1xuICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LWRldGFpbCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGlhZ3JhbSB7XG4gIG1pbi13aWR0aDogODBweDtcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gIHBhZGRpbmc6IDhweDtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIG1hcmdpbjogOHB4IDA7XG4gIGhlaWdodDogMTA0cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtc3ltYm9sIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmc6IDE2cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGVzY3JpcHRpb24tYXR0cmlidXRpb24ge1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbiJdfQ== */\"","import { Component } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { MediaChange, MediaObserver } from \"@angular/flex-layout\";\nimport { AuthorisationService } from \"../../services/authorisation.service\";\nimport { DatePipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./admin.component.html\",\n  styleUrls: [\"./admin.component.css\"]\n})\nexport class AdminComponent {\n  date = new DatePipe(\"en-US\").transform(new Date(), \"EEEE, MMMM d, y\");\n\n  opened = true;\n  over = \"side\";\n  expandHeight = \"42px\";\n  collapseHeight = \"42px\";\n  displayMode = \"flat\";\n\n  watcher: Subscription;\n\n  constructor(mediaObserver: MediaObserver, public auth: AuthorisationService) {\n    this.watcher = mediaObserver.media$.subscribe((change: MediaChange) => {\n      if (change.mqAlias === \"sm\" || change.mqAlias === \"xs\") {\n        this.opened = false;\n        this.over = \"over\";\n      } else {\n        this.opened = true;\n        this.over = \"side\";\n      }\n    });\n  }\n}\n","export default \"h1 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 130px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\n.container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.mat-form-field {\\n  width: 40%;\\n}\\n\\n.mat-button {\\n  color: #3e50b5;\\n  width: 20%;\\n}\\n\\nform {\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2xheW91dHMvYXV0aG9yaXNhdGlvbi9hdXRob3Jpc2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsb0RBQW9EO0FBQ3REOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixTQUFTO0VBQ1QsT0FBTztFQUNQLFFBQVE7QUFDVjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvbGF5b3V0cy9hdXRob3Jpc2F0aW9uL2F1dGhvcmlzYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LWZhbWlseTogQXJpYWw7XG4gIGZvbnQtc2l6ZTogMTMwcHg7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LXNoYWRvdzogMXB4IDNweCAwICM5Njk2OTYsIDFweCAxM3B4IDVweCAjYWJhOGE4O1xufVxuXG4uY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiA0MCU7XG59XG5cbi5tYXQtYnV0dG9uIHtcbiAgY29sb3I6ICMzZTUwYjU7XG4gIHdpZHRoOiAyMCU7XG59XG5cbmZvcm0ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXX0= */\"","import {Component} from '@angular/core'\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorisation.component.html',\n  styleUrls: ['./authorisation.component.css']\n})\nexport class AuthorisationComponent {\n\n  constructor() {\n  }\n\n}\n","export default \".spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\\n\\n.container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.mat-menu-item {\\n  color: #3e50b5;\\n  text-align: center;\\n}\\n\\n.sure {\\n  font-family: Arial;\\n  font-size: small;\\n  text-align: center;\\n  color: #3e50b5;\\n  margin-top: 5px;\\n  margin-bottom: 15px;\\n  margin-left: 15px;\\n}\\n\\nmat-sidenav {\\n  width: 250px;;\\n}\\n\\n.no-shadow {\\n  box-shadow: none !important;\\n}\\n\\n::ng-deep .mat-expansion-panel-body {\\n  padding: 0 !important;\\n  padding-left: 10px !important;\\n}\\n\\n.header-box-shadow {\\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, .2), 0 6px 10px 0 rgba(0, 0, 0, .14), 0 1px 18px 0 rgba(0, 0, 0, .12);\\n}\\n\\n.bottom-to-top {\\n  border: 0 solid;\\n  border-right-width: 1px;\\n  -webkit-border-image: -webkit-gradient(linear, left bottom, left top, from(#c1c1c1), to(rgba(0, 0, 0, 0))) 1 100%;\\n  -webkit-border-image: linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%;\\n       -o-border-image: linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%;\\n          border-image: -webkit-gradient(linear, left bottom, left top, from(#c1c1c1), to(rgba(0, 0, 0, 0))) 1 100%;\\n          border-image: linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\n.button1 {\\n  color: #3e50b5;\\n  text-align: left;\\n  font-weight: normal;\\n  font-size: 15px;\\n  width: 230px;\\n  margin-left: 11px;\\n}\\n\\n.button2 {\\n  color: #3e50b5;\\n  width: 100%;\\n}\\n\\n.button3 {\\n  color: #3e50b5;\\n  width: 1000px;\\n}\\n\\nh1 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 130px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\nh2 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 65px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\nh3 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 40px;\\n  color: #3e50b5;\\n  text-shadow: 1px 5px 3px #969696, 3px 9px 7px #aba8a8;\\n}\\n\\nth {\\n  font-size: 15px;\\n  font-weight: bold;\\n  color: #6f737a;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row {\\n  height: 0;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: #f5f5f5;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n\\n.example-element-row td {\\n  border-bottom-width: 0;\\n}\\n\\n.example-element-detail {\\n  overflow: hidden;\\n  display: -webkit-box;\\n  display: flex;\\n}\\n\\n.example-element-diagram {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution {\\n  opacity: 0.5;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2xheW91dHMvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBYztVQUFkLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFNBQVM7RUFDVCxPQUFPO0VBQ1AsUUFBUTtBQUNWOztBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSw4R0FBOEc7QUFDaEg7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGlIQUFzRTtFQUF0RSwrRUFBc0U7T0FBdEUsMEVBQXNFO1VBQXRFLHlHQUFzRTtVQUF0RTtBQUNGOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztFQUNkLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsb0RBQW9EO0FBQ3REOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsY0FBYztFQUNkLG9EQUFvRDtBQUN0RDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGNBQWM7RUFDZCxxREFBcUQ7QUFDdkQ7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2xheW91dHMvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3BhY2VyIHtcbiAgZmxleDogMSAxIGF1dG87XG59XG5cbi5jb250YWluZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbn1cblxuLm1hdC1tZW51LWl0ZW0ge1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc3VyZSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiBzbWFsbDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzNlNTBiNTtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICBtYXJnaW4tbGVmdDogMTVweDtcbn1cblxubWF0LXNpZGVuYXYge1xuICB3aWR0aDogMjUwcHg7O1xufVxuXG4ubm8tc2hhZG93IHtcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLm1hdC1leHBhbnNpb24tcGFuZWwtYm9keSB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7XG59XG5cbi5oZWFkZXItYm94LXNoYWRvdyB7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDVweCAtMXB4IHJnYmEoMCwgMCwgMCwgLjIpLCAwIDZweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAuMTQpLCAwIDFweCAxOHB4IDAgcmdiYSgwLCAwLCAwLCAuMTIpO1xufVxuXG4uYm90dG9tLXRvLXRvcCB7XG4gIGJvcmRlcjogMCBzb2xpZDtcbiAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7XG4gIGJvcmRlci1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgI2MxYzFjMSwgcmdiYSgwLCAwLCAwLCAwKSkgMSAxMDAlXG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5idXR0b24xIHtcbiAgY29sb3I6ICMzZTUwYjU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgd2lkdGg6IDIzMHB4O1xuICBtYXJnaW4tbGVmdDogMTFweDtcbn1cblxuLmJ1dHRvbjIge1xuICBjb2xvcjogIzNlNTBiNTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5idXR0b24zIHtcbiAgY29sb3I6ICMzZTUwYjU7XG4gIHdpZHRoOiAxMDAwcHg7XG59XG5cbmgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LWZhbWlseTogQXJpYWw7XG4gIGZvbnQtc2l6ZTogMTMwcHg7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LXNoYWRvdzogMXB4IDNweCAwICM5Njk2OTYsIDFweCAxM3B4IDVweCAjYWJhOGE4O1xufVxuXG5oMiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXNpemU6IDY1cHg7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LXNoYWRvdzogMXB4IDNweCAwICM5Njk2OTYsIDFweCAxM3B4IDVweCAjYWJhOGE4O1xufVxuXG5oMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXNpemU6IDQwcHg7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LXNoYWRvdzogMXB4IDVweCAzcHggIzk2OTY5NiwgM3B4IDlweCA3cHggI2FiYThhODtcbn1cblxudGgge1xuICBmb250LXNpemU6IDE1cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzZmNzM3YTtcbn1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxudHIuZXhhbXBsZS1kZXRhaWwtcm93IHtcbiAgaGVpZ2h0OiAwO1xufVxuXG50ci5leGFtcGxlLWVsZW1lbnQtcm93Om5vdCguZXhhbXBsZS1leHBhbmRlZC1yb3cpOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbn1cblxudHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTphY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjZWZlZmVmO1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LXJvdyB0ZCB7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGV0YWlsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kaWFncmFtIHtcbiAgbWluLXdpZHRoOiA4MHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcbiAgcGFkZGluZzogOHB4O1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgbWFyZ2luOiA4cHggMDtcbiAgaGVpZ2h0OiAxMDRweDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1zeW1ib2wge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LWRlc2NyaXB0aW9uIHtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbi1hdHRyaWJ1dGlvbiB7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuIl19 */\"","import { Component } from \"@angular/core\";\nimport { MediaChange, MediaObserver } from \"@angular/flex-layout\";\nimport { Subscription } from \"rxjs\";\nimport { AuthorisationService } from \"../../services/authorisation.service\";\nimport { DatePipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-company\",\n  templateUrl: \"./company.component.html\",\n  styleUrls: [\"./company.component.css\"]\n})\nexport class CompanyComponent {\n  date = new DatePipe(\"en-US\").transform(new Date(), \"EEEE, MMMM d, y\");\n\n  opened = true;\n  over = \"side\";\n  expandHeight = \"42px\";\n  collapseHeight = \"42px\";\n  displayMode = \"flat\";\n\n  watcher: Subscription;\n\n  constructor(mediaObserver: MediaObserver, public auth: AuthorisationService) {\n    this.watcher = mediaObserver.media$.subscribe((change: MediaChange) => {\n      if (change.mqAlias === \"sm\" || change.mqAlias === \"xs\") {\n        this.opened = false;\n        this.over = \"over\";\n      } else {\n        this.opened = true;\n        this.over = \"side\";\n      }\n    });\n  }\n}\n","export default \".spacer {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n}\\n\\n.container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.mat-menu-item {\\n  color: #3e50b5;\\n  text-align: center;\\n}\\n\\n.sure {\\n  font-family: Arial;\\n  font-size: small;\\n  text-align: center;\\n  color: #3e50b5;\\n  margin-top: 5px;\\n  margin-bottom: 15px;\\n  margin-left: 15px;\\n}\\n\\nmat-sidenav {\\n  width: 250px;;\\n}\\n\\n.no-shadow {\\n  box-shadow: none !important;\\n}\\n\\n::ng-deep .mat-expansion-panel-body {\\n  padding: 0 !important;\\n  padding-left: 10px !important;\\n}\\n\\n.header-box-shadow {\\n  box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\n}\\n\\n.bottom-to-top {\\n  border: 0 solid;\\n  border-right-width: 1px;\\n  -webkit-border-image:\\n    -webkit-gradient(linear, left bottom, left top, from(#c1c1c1), to(rgba(0, 0, 0, 0))) 1 100%;\\n  -webkit-border-image:\\n    linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%;\\n       -o-border-image:\\n    linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%;\\n          border-image:\\n    -webkit-gradient(linear, left bottom, left top, from(#c1c1c1), to(rgba(0, 0, 0, 0))) 1 100%;\\n          border-image:\\n    linear-gradient(to top, #c1c1c1, rgba(0, 0, 0, 0)) 1 100%\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%;\\n}\\n\\n.button1 {\\n  color: #3e50b5;\\n  text-align: left;\\n  font-weight: normal;\\n  font-size: 15px;\\n  width: 230px;\\n  margin-left: 11px;\\n}\\n\\n.button2 {\\n  color: #3e50b5;\\n  width: 100%;\\n}\\n\\n.button3 {\\n  color: #3e50b5;\\n  width: 1000px;\\n}\\n\\nh1 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 130px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\nh2 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 65px;\\n  color: #3e50b5;\\n  text-shadow: 1px 3px 0 #969696, 1px 13px 5px #aba8a8;\\n}\\n\\nh3 {\\n  text-align: center;\\n  font-family: Arial;\\n  font-size: 40px;\\n  color: #3e50b5;\\n  text-shadow: 1px 5px 3px #969696, 3px 9px 7px #aba8a8;\\n}\\n\\nth {\\n  font-size: 15px;\\n  font-weight: bold;\\n  color: #6f737a;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\ntr.example-detail-row {\\n  height: 0;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):hover {\\n  background: #f5f5f5;\\n}\\n\\ntr.example-element-row:not(.example-expanded-row):active {\\n  background: #efefef;\\n}\\n\\n.example-element-row td {\\n  border-bottom-width: 0;\\n}\\n\\n.example-element-detail {\\n  overflow: hidden;\\n  display: -webkit-box;\\n  display: flex;\\n}\\n\\n.example-element-diagram {\\n  min-width: 80px;\\n  border: 2px solid black;\\n  padding: 8px;\\n  font-weight: lighter;\\n  margin: 8px 0;\\n  height: 104px;\\n}\\n\\n.example-element-symbol {\\n  font-weight: bold;\\n  font-size: 40px;\\n  line-height: normal;\\n}\\n\\n.example-element-description {\\n  padding: 16px;\\n}\\n\\n.example-element-description-attribution {\\n  opacity: 0.5;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2xheW91dHMvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFjO1VBQWQsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLHFHQUFxRztBQUN2Rzs7QUFFQTtFQUNFLGVBQWU7RUFDZix1QkFBdUI7RUFDdkI7K0ZBQzBEO0VBRDFEOzZEQUMwRDtPQUQxRDs2REFDMEQ7VUFEMUQ7K0ZBQzBEO1VBRDFEOztBQUVGOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixZQUFZO0VBQ1osaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztFQUNkLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsb0RBQW9EO0FBQ3REOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsY0FBYztFQUNkLG9EQUFvRDtBQUN0RDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGNBQWM7RUFDZCxxREFBcUQ7QUFDdkQ7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsb0JBQWE7RUFBYixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2xheW91dHMvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cblxuLmNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xufVxuXG4ubWF0LW1lbnUtaXRlbSB7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zdXJlIHtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXNpemU6IHNtYWxsO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xufVxuXG5tYXQtc2lkZW5hdiB7XG4gIHdpZHRoOiAyNTBweDs7XG59XG5cbi5uby1zaGFkb3cge1xuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0LWV4cGFuc2lvbi1wYW5lbC1ib2R5IHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHggIWltcG9ydGFudDtcbn1cblxuLmhlYWRlci1ib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMCAzcHggNXB4IC0xcHggcmdiYSgwLDAsMCwuMiksIDAgNnB4IDEwcHggMCByZ2JhKDAsMCwwLC4xNCksIDAgMXB4IDE4cHggMCByZ2JhKDAsMCwwLC4xMik7XG59XG5cbi5ib3R0b20tdG8tdG9wIHtcbiAgYm9yZGVyOiAwIHNvbGlkO1xuICBib3JkZXItcmlnaHQtd2lkdGg6IDFweDtcbiAgYm9yZGVyLWltYWdlOlxuICAgIGxpbmVhci1ncmFkaWVudCh0byB0b3AsICNjMWMxYzEsIHJnYmEoMCwgMCwgMCwgMCkpIDEgMTAwJVxufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE0cHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYnV0dG9uMSB7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHdpZHRoOiAyMzBweDtcbiAgbWFyZ2luLWxlZnQ6IDExcHg7XG59XG5cbi5idXR0b24yIHtcbiAgY29sb3I6ICMzZTUwYjU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYnV0dG9uMyB7XG4gIGNvbG9yOiAjM2U1MGI1O1xuICB3aWR0aDogMTAwMHB4O1xufVxuXG5oMSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXNpemU6IDEzMHB4O1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1zaGFkb3c6IDFweCAzcHggMCAjOTY5Njk2LCAxcHggMTNweCA1cHggI2FiYThhODtcbn1cblxuaDIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiA2NXB4O1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1zaGFkb3c6IDFweCAzcHggMCAjOTY5Njk2LCAxcHggMTNweCA1cHggI2FiYThhODtcbn1cblxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBjb2xvcjogIzNlNTBiNTtcbiAgdGV4dC1zaGFkb3c6IDFweCA1cHggM3B4ICM5Njk2OTYsIDNweCA5cHggN3B4ICNhYmE4YTg7XG59XG5cbnRoIHtcbiAgZm9udC1zaXplOiAxNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICM2ZjczN2E7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRyLmV4YW1wbGUtZGV0YWlsLXJvdyB7XG4gIGhlaWdodDogMDtcbn1cblxudHIuZXhhbXBsZS1lbGVtZW50LXJvdzpub3QoLmV4YW1wbGUtZXhwYW5kZWQtcm93KTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XG59XG5cbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6YWN0aXZlIHtcbiAgYmFja2dyb3VuZDogI2VmZWZlZjtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1yb3cgdGQge1xuICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xufVxuXG4uZXhhbXBsZS1lbGVtZW50LWRldGFpbCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGlhZ3JhbSB7XG4gIG1pbi13aWR0aDogODBweDtcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gIHBhZGRpbmc6IDhweDtcbiAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG4gIG1hcmdpbjogOHB4IDA7XG4gIGhlaWdodDogMTA0cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtc3ltYm9sIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmV4YW1wbGUtZWxlbWVudC1kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmc6IDE2cHg7XG59XG5cbi5leGFtcGxlLWVsZW1lbnQtZGVzY3JpcHRpb24tYXR0cmlidXRpb24ge1xuICBvcGFjaXR5OiAwLjU7XG59XG4iXX0= */\"","import { Component } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { MediaChange, MediaObserver } from \"@angular/flex-layout\";\nimport { AuthorisationService } from \"../../services/authorisation.service\";\nimport { DatePipe } from \"@angular/common\";\n\n@Component({\n  selector: \"app-customer\",\n  templateUrl: \"./customer.component.html\",\n  styleUrls: [\"./customer.component.css\"]\n})\nexport class CustomerComponent {\n  date = new DatePipe(\"en-US\").transform(new Date(), \"EEEE, MMMM d, y\");\n\n  opened = true;\n  over = \"side\";\n\n  watcher: Subscription;\n\n  constructor(mediaObserver: MediaObserver, public auth: AuthorisationService) {\n    this.watcher = mediaObserver.media$.subscribe((change: MediaChange) => {\n      if (change.mqAlias === \"sm\" || change.mqAlias === \"xs\") {\n        this.opened = false;\n        this.over = \"over\";\n      } else {\n        this.opened = true;\n        this.over = \"side\";\n      }\n    });\n  }\n}\n","import {Component, OnInit} from '@angular/core'\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styles: [`\n    .center {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n      width: 32%;\n    }\n  `]\n})\nexport class Page404Component implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { ErrorService } from \"./error.service\";\nimport { Company } from \"../../models/company\";\nimport { Customer } from \"../../models/customer\";\nimport { Coupon } from \"../../models/coupon\";\nimport { Income } from \"../../models/income\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AdminService {\n  private companyUrl =\n    \"https://couponmanagementsystem.herokuapp.com/admin/companies\";\n  private couponUrl =\n    \"https://couponmanagementsystem.herokuapp.com/admin/coupons\";\n  private customerUrl =\n    \"https://couponmanagementsystem.herokuapp.com/admin/customers\";\n  private incomeUrl =\n    \"https://couponmanagementsystem.herokuapp.com/admin/incomes\";\n\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  public createCompany(company: Company): Observable<Company> {\n    return this.http\n      .post<Company>(this.companyUrl, company, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public deleteCompany(id: number): Observable<Company> {\n    return this.http\n      .delete<Company>(this.companyUrl + \"/\" + id, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public updateCompany(company: Company): Observable<Company> {\n    return this.http\n      .put<Company>(this.companyUrl, company, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getAllCompanies(): Observable<Company[]> {\n    return this.http\n      .get<Company[]>(this.companyUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public createCoupon(coupon: Coupon): Observable<Coupon> {\n    return this.http\n      .post<Coupon>(this.couponUrl + \"/\" + coupon.companyId, coupon, {\n        withCredentials: true\n      })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public deleteCoupon(id: number): Observable<Coupon> {\n    return this.http\n      .delete<Coupon>(this.couponUrl + \"/\" + id, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public updateCoupon(coupon: Coupon): Observable<Coupon> {\n    return this.http\n      .put<Coupon>(this.couponUrl + \"/\" + coupon.companyId, coupon, {\n        withCredentials: true\n      })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getAllCoupons(): Observable<Coupon[]> {\n    return this.http\n      .get<Coupon[]>(this.couponUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public createCustomer(customer: Customer): Observable<Customer> {\n    return this.http\n      .post<Customer>(this.customerUrl, customer, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public deleteCustomer(id: number): Observable<Customer> {\n    return this.http\n      .delete<Customer>(this.customerUrl + \"/\" + id, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public updateCustomer(customer: Customer): Observable<Customer> {\n    return this.http\n      .put<Customer>(this.customerUrl, customer, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getAllCustomers(): Observable<Customer[]> {\n    return this.http\n      .get<Customer[]>(this.customerUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getIncomes(): Observable<Income[]> {\n    return this.http\n      .get<Income[]>(this.incomeUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { User } from \"../../models/user\";\nimport { ErrorService } from \"./error.service\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthorisationService {\n  private logUrl = \"https://couponmanagementsystem.herokuapp.com/login\";\n  private regCompanyUrl =\n    \"https://couponmanagementsystem.herokuapp.com/registration/companies\";\n  private regCustomerUrl =\n    \"https://couponmanagementsystem.herokuapp.com/registration/customers\";\n\n  constructor(\n    private http: HttpClient,\n    private errorService: ErrorService,\n    private router: Router\n  ) {}\n\n  public login(logUser: User): Observable<User> {\n    return this.http\n      .post<User>(this.logUrl, logUser, { withCredentials: true })\n      .pipe(\n        tap(() => {\n          if (logUser.clientType === \"ADMIN\") {\n            sessionStorage.setItem(\"adminLogged\", logUser.clientType);\n          } else if (logUser.clientType === \"COMPANY\") {\n            sessionStorage.setItem(\"companyLogged\", logUser.clientType);\n          } else if (logUser.clientType === \"CUSTOMER\") {\n            sessionStorage.setItem(\"customerLogged\", logUser.clientType);\n          }\n        }),\n        catchError(err => this.errorService.errorHandler(err))\n      );\n  }\n\n  public regCompany(regUser: User): Observable<User> {\n    return this.http\n      .post<User>(this.regCompanyUrl, regUser, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public regCustomer(regUser: User): Observable<User> {\n    return this.http\n      .post<User>(this.regCustomerUrl, regUser, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public isAdminLoggedIn() {\n    if (sessionStorage.getItem(\"adminLogged\") === \"ADMIN\") {\n      return true;\n    }\n  }\n\n  public isCompanyLoggedIn() {\n    if (sessionStorage.getItem(\"companyLogged\") === \"COMPANY\") {\n      return true;\n    }\n  }\n\n  public isCustomerLoggedIn() {\n    if (sessionStorage.getItem(\"customerLogged\") === \"CUSTOMER\") {\n      return true;\n    }\n  }\n\n  public logout() {\n    sessionStorage.clear();\n    this.router.navigate([\"/login\"]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ErrorService } from \"./error.service\";\nimport { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { Coupon } from \"../../models/coupon\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CompanyService {\n  private companyUrl =\n    \"https://couponmanagementsystem.herokuapp.com/company/coupons\";\n\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  public createCoupon(coupon: Coupon): Observable<Coupon> {\n    return this.http\n      .post<Coupon>(this.companyUrl, coupon, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public deleteCoupon(id: number): Observable<Coupon> {\n    return this.http\n      .delete<Coupon>(this.companyUrl + \"/\" + id, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public updateCoupon(coupon: Coupon): Observable<Coupon> {\n    return this.http\n      .put<Coupon>(this.companyUrl, coupon, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getAllCoupons(): Observable<Coupon[]> {\n    return this.http\n      .get<Coupon[]>(this.companyUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ErrorService } from \"./error.service\";\nimport { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { Coupon } from \"../../models/coupon\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CustomerService {\n  private couponsUrl =\n    \"https://couponmanagementsystem.herokuapp.com/customer/coupons\";\n  private availableUrl =\n    \"https://couponmanagementsystem.herokuapp.com/customer/coupons-available\";\n\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  public purchaseCoupon(id: number): Observable<Coupon> {\n    return this.http\n      .get<Coupon>(this.couponsUrl + \"/\" + id, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getPurchasedCoupons(): Observable<Coupon[]> {\n    return this.http\n      .get<Coupon[]>(this.couponsUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n\n  public getAvailableCoupons(): Observable<Coupon[]> {\n    return this.http\n      .get<Coupon[]>(this.availableUrl, { withCredentials: true })\n      .pipe(catchError(err => this.errorService.errorHandler(err)));\n  }\n}\n","import {Injectable} from '@angular/core'\nimport {HttpErrorResponse} from '@angular/common/http'\nimport {throwError} from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  public errorHandler(error: HttpErrorResponse) {\n    return throwError(error.error)\n  }\n\n}\n","import {NgModule} from '@angular/core'\nimport {\n  MatButtonModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatProgressSpinnerModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatTableModule\n} from '@angular/material'\nimport {MatToolbarModule} from '@angular/material/toolbar'\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FlexLayoutModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n  ],\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatSidenavModule,\n    FlexLayoutModule,\n    MatExpansionModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FlexLayoutModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ],\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}